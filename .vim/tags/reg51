!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AC	/usr/include/reg51.h	/^sbit AC = 0xD6; \/\/辅助进借位，（麻烦b） $/;"	v
ACC	/usr/include/reg51.h	/^sfr ACC = 0xE0; \/\/累加器，程序员最常用的 $/;"	v
B	/usr/include/reg51.h	/^sfr B = 0xF0; \/\/寄存器，主要用于乘除 $/;"	v
CY	/usr/include/reg51.h	/^sbit CY = 0xD7; \/\/进位或借位，有就是1，没有就是0 $/;"	v
DPH	/usr/include/reg51.h	/^sfr DPH = 0x83; \/\/数据指针，用途大 $/;"	v
DPL	/usr/include/reg51.h	/^sfr DPL = 0x82; $/;"	v
EA	/usr/include/reg51.h	/^sbit EA = 0xAF; \/\/Enable all哇，重要，全局中断控制，光着他，哈哈，什么都不用作了，就像放假一样 $/;"	v
ES	/usr/include/reg51.h	/^sbit ES = 0xAC; \/\/Enable Serial,开串口中断 $/;"	v
ET0	/usr/include/reg51.h	/^sbit ET0 = 0xA9; \/\/Enable Timer\/counter 0 $/;"	v
ET1	/usr/include/reg51.h	/^sbit ET1 = 0xAB; \/\/Enable Timer\/Counter 1 $/;"	v
EX0	/usr/include/reg51.h	/^sbit EX0 = 0xA8; \/\/Enable External 0$/;"	v
EX1	/usr/include/reg51.h	/^sbit EX1 = 0xAA; \/\/Enable External 1 $/;"	v
F0	/usr/include/reg51.h	/^sbit F0 = 0xD5; \/\/没有具体用途，可以由用户决定他的意义，所以它就没有意义 $/;"	v
IE	/usr/include/reg51.h	/^sfr IE = 0xA8; \/\/好东西，中断控制 $/;"	v
IE0	/usr/include/reg51.h	/^sbit IE0 = 0x89; \/\/interrupt external 0 外中断触发方式$/;"	v
IE1	/usr/include/reg51.h	/^sbit IE1 = 0x8B; \/\/interrupt external 1 外中断请求标志 $/;"	v
INT0	/usr/include/reg51.h	/^sbit INT0 = 0xB2; \/\/外中断0 $/;"	v
INT1	/usr/include/reg51.h	/^sbit INT1 = 0xB3; \/\/外中断1 $/;"	v
IP	/usr/include/reg51.h	/^sfr IP = 0xB8; \/\/中断优先级控制，没有设计过要求时间严格的系统，所以至今没有用过 $/;"	v
IT0	/usr/include/reg51.h	/^sbit IT0 = 0x88; \/\/interrupt triggle 0 外中断触发方式$/;"	v
IT1	/usr/include/reg51.h	/^sbit IT1 = 0x8A; \/\/interrupt triggle 1 外中断触发方式 $/;"	v
OV	/usr/include/reg51.h	/^sbit OV = 0xD2; \/\/over！溢出，有是1，没有是0 $/;"	v
P	/usr/include/reg51.h	/^sbit P = 0xD0; \/\/奇偶校验，奇数个1是1$/;"	v
P0	/usr/include/reg51.h	/^sfr P0 = 0x80; \/\/P0口 $/;"	v
P1	/usr/include/reg51.h	/^sfr P1 = 0x90; \/\/P1口 $/;"	v
P2	/usr/include/reg51.h	/^sfr P2 = 0xA0; \/\/P2口 $/;"	v
P3	/usr/include/reg51.h	/^sfr P3 = 0xB0; \/\/P3口 $/;"	v
PCON	/usr/include/reg51.h	/^sfr PCON = 0x87; \/\/电源控制 $/;"	v
PS	/usr/include/reg51.h	/^sbit PS = 0xBC; \/\/串行中断优先级 $/;"	v
PSW	/usr/include/reg51.h	/^sfr PSW = 0xD0; \/\/程序状态字，具体位意义见位定义 $/;"	v
PT0	/usr/include/reg51.h	/^sbit PT0 = 0xB9; \/\/ $/;"	v
PT1	/usr/include/reg51.h	/^sbit PT1 = 0xBB; \/\/T1优先级 $/;"	v
PX0	/usr/include/reg51.h	/^sbit PX0 = 0xB8; \/\/上面两个1换成0$/;"	v
PX1	/usr/include/reg51.h	/^sbit PX1 = 0xBA; \/\/外部中断1优先级 $/;"	v
RB8	/usr/include/reg51.h	/^sbit RB8 = 0x9A; \/\/要发的第九位 $/;"	v
RD	/usr/include/reg51.h	/^sbit RD = 0xB7; \/\/读 $/;"	v
REN	/usr/include/reg51.h	/^sbit REN = 0x9C; \/\/串行接收允许 $/;"	v
RI	/usr/include/reg51.h	/^sbit RI = 0x98; \/\/接收完成中断标志$/;"	v
RS0	/usr/include/reg51.h	/^sbit RS0 = 0xD3; \/\/工作寄存器选择，这个在下面解释 $/;"	v
RS1	/usr/include/reg51.h	/^sbit RS1 = 0xD4; $/;"	v
RXD	/usr/include/reg51.h	/^sbit RXD = 0xB0; \/\/串行接收$/;"	v
SBUF	/usr/include/reg51.h	/^sfr SBUF = 0x99; \/\/哇，更熟悉，串口缓冲寄存器$/;"	v
SCON	/usr/include/reg51.h	/^sfr SCON = 0x98; \/\/哇，熟悉，串口控制寄存器 $/;"	v
SM0	/usr/include/reg51.h	/^sbit SM0 = 0x9F; \/\/ $/;"	v
SM1	/usr/include/reg51.h	/^sbit SM1 = 0x9E; \/\/串口工作方式 $/;"	v
SM2	/usr/include/reg51.h	/^sbit SM2 = 0x9D; \/\/多机通信控制位$/;"	v
SP	/usr/include/reg51.h	/^sfr SP = 0x81; \/\/堆栈指针，初始化为07；先加1后压栈，先出栈再减1， $/;"	v
T0	/usr/include/reg51.h	/^sbit T0 = 0xB4; \/\/T\/C0 $/;"	v
T1	/usr/include/reg51.h	/^sbit T1 = 0xB5; \/\/T\/C1 $/;"	v
TB8	/usr/include/reg51.h	/^sbit TB8 = 0x9B; \/\/收到的第九位 $/;"	v
TCON	/usr/include/reg51.h	/^sfr TCON = 0x88; \/\/Timer\/Counter控制 $/;"	v
TF0	/usr/include/reg51.h	/^sbit TF0 = 0x8D; \/\/ $/;"	v
TF1	/usr/include/reg51.h	/^sbit TF1 = 0x8F; \/\/T1的中断请求标志 $/;"	v
TH0	/usr/include/reg51.h	/^sfr TH0 = 0x8C; \/\/存着当前的计数值 $/;"	v
TH1	/usr/include/reg51.h	/^sfr TH1 = 0x8D; \/\/我就想不明白，当时设计的时候，为什么不把TH0,TL0放在连续的地址！ $/;"	v
TI	/usr/include/reg51.h	/^sbit TI = 0x99; \/\/哇，熟悉吧，发送完成中断标志 $/;"	v
TL0	/usr/include/reg51.h	/^sfr TL0 = 0x8A; $/;"	v
TL1	/usr/include/reg51.h	/^sfr TL1 = 0x8B; \/\/ $/;"	v
TMOD	/usr/include/reg51.h	/^sfr TMOD = 0x89; \/\/Timer\/Counter方式控制 $/;"	v
TR0	/usr/include/reg51.h	/^sbit TR0 = 0x8C; \/\/Timer 0running$/;"	v
TR1	/usr/include/reg51.h	/^sbit TR1 = 0x8E; \/\/Timer 1 running，好记吧~ $/;"	v
TXD	/usr/include/reg51.h	/^sbit TXD = 0xB1; \/\/串行发送 $/;"	v
WR	/usr/include/reg51.h	/^sbit WR = 0xB6; \/\/写 $/;"	v
